name: Workflow to create EKS and install ArgoCD

on:
    push:
        branches: [ "master" ]
    pull_request:
        branches: [ "master" ] 

jobs:
    deploy:
        runs-on: ubuntu-latest
        timeout-minutes: 50
        steps:
            - name: checkout code
              uses: actions/checkout@v4
            
            - name: Install kubectl
              uses: azure/setup-kubectl@v3
              with:
                version: 'v1.29.0'
              id: Install
              
            - name: Install helm
              uses: azure/setup-helm@v4.1.0
              with:
                version: 'v3.14.0'
              id: helm


            - name: Configure AWS Credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-region: eu-west-1
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

        
            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3               

            - name: Create S3 buckets and dynamodb table
              run: |
                echo "Creating s3 bucket and dynamodb table"
                cd terraform-s3-db
                cd rootmodules
                terraform init
                terraform plan -var-file="terraform.tfvars"
                terraform apply -auto-approve

            - name: Create an EKS cluster
              run: |
                echo "Creating an eks cluster"
                cd terraform-eks
                cd devEnvironment
                terraform init
                terraform plan -var-file="terraform.tfvars"
                terraform apply -auto-approve

            - name: Update kube config
              run: aws eks update-kubeconfig --name mycluster

            - name: Deploy to EKS
              run: |
                cd manifest
                echo "Creating namespace"
                kubectl apply -f namespace.yml

            - name: Installing ArgoCD in EKS Cluster
              run: |
                echo "Installing argocd in eks cluster"
                kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/v2.10.2/manifests/install.yaml
               
            - name: Install EFK (ElasticSearch, Fluentd and Kibana) in EKS
              run: |
                echo "Installing EFK"
                helm repo add elastic https://helm.elastic.co
                helm repo update
                helm install es-quickstart elastic/eck-stack -n kube-system --values https://raw.githubusercontent.com/elastic/cloud-on-k8s/2.11/deploy/eck-stack/examples/elasticsearch/hot-warm-cold.yaml --values https://raw.githubusercontent.com/elastic/cloud-on-k8s/2.11/deploy/eck-stack/examples/kibana/http-configuration.yaml --values https://raw.githubusercontent.com/elastic/cloud-on-k8s/2.11/deploy/eck-stack/examples/logstash/basic-eck.yaml -n elastic-stack
                

